{"version":3,"file":"Model.js","sourceRoot":"","sources":["../../src/three-components/Model.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AnimationAction, AnimationClip, AnimationMixer, Box3, Object3D, Vector3} from 'three';\n\nimport ModelViewerElementBase, {$renderer} from '../model-viewer-base.js';\n\nimport {ModelViewerGLTFInstance} from './gltf-instance/ModelViewerGLTFInstance.js';\nimport {Hotspot} from './Hotspot.js';\nimport {reduceVertices} from './ModelUtils.js';\nimport {Shadow} from './Shadow.js';\n\nexport const DEFAULT_FOV_DEG = 45;\nconst DEFAULT_HALF_FOV = (DEFAULT_FOV_DEG / 2) * Math.PI / 180;\nexport const SAFE_RADIUS_RATIO = Math.sin(DEFAULT_HALF_FOV);\nexport const DEFAULT_TAN_FOV = Math.tan(DEFAULT_HALF_FOV);\n\nexport const $shadow = Symbol('shadow');\nconst $cancelPendingSourceChange = Symbol('cancelPendingSourceChange');\nconst $currentGLTF = Symbol('currentGLTF');\n\nconst view = new Vector3();\nconst target = new Vector3();\nconst normalWorld = new Vector3();\n\n/**\n * An Object3D that can swap out its underlying model.\n */\nexport default class Model extends Object3D {\n  protected[$shadow]: Shadow|null = null;\n\n  private[$currentGLTF]: ModelViewerGLTFInstance|null = null;\n  private mixer: AnimationMixer;\n  private[$cancelPendingSourceChange]: (() => void)|null;\n  private animationsByName: Map<string, AnimationClip> = new Map();\n  private currentAnimationAction: AnimationAction|null = null;\n\n  public animations: Array<AnimationClip> = [];\n  public modelContainer = new Object3D();\n  public animationNames: Array<string> = [];\n  public boundingBox = new Box3();\n  public size = new Vector3();\n  public idealCameraDistance = 0;\n  public fieldOfViewAspect = 0;\n  public userData: {url: string|null} = {url: null};\n  public url: string|null = null;\n\n  get currentGLTF() {\n    return this[$currentGLTF];\n  }\n\n  /**\n   * Creates a model.\n   */\n  constructor() {\n    super();\n\n    this.name = 'Model';\n    this.modelContainer.name = 'ModelContainer';\n\n    this.add(this.modelContainer);\n    this.mixer = new AnimationMixer(this.modelContainer);\n  }\n\n  /**\n   * Returns a boolean indicating whether or not there is a\n   * loaded model attached.\n   */\n  hasModel(): boolean {\n    return !!this.modelContainer.children.length;\n  }\n\n  /**\n   * Pass in a THREE.Object3D to be controlled\n   * by this model.\n   */\n  setObject(model: Object3D) {\n    this.clear();\n    this.modelContainer.add(model);\n    this.updateFraming();\n    this.dispatchEvent({type: 'model-load'});\n  }\n\n  async setSource(\n      element: ModelViewerElementBase, url: string|null,\n      progressCallback?: (progress: number) => void) {\n    if (!url || url === this.url) {\n      if (progressCallback) {\n        progressCallback(1);\n      }\n      return;\n    }\n\n    // If we have pending work due to a previous source change in progress,\n    // cancel it so that we do not incur a race condition:\n    if (this[$cancelPendingSourceChange] != null) {\n      this[$cancelPendingSourceChange]!();\n      this[$cancelPendingSourceChange] = null;\n    }\n\n    this.url = url;\n\n    let gltf: ModelViewerGLTFInstance;\n\n    try {\n      gltf = await new Promise<ModelViewerGLTFInstance>(\n          async (resolve, reject) => {\n            this[$cancelPendingSourceChange] = () => reject();\n            try {\n              const result = await element[$renderer].loader.load(\n                  url, element, progressCallback);\n              resolve(result);\n            } catch (error) {\n              reject(error);\n            }\n          });\n    } catch (error) {\n      if (error == null) {\n        // Loading was cancelled, so silently return\n        return;\n      }\n\n      throw error;\n    }\n\n    this.clear();\n    this[$currentGLTF] = gltf;\n\n    if (gltf != null) {\n      this.modelContainer.add(gltf.scene);\n    }\n\n    const {animations} = gltf!;\n    const animationsByName = new Map();\n    const animationNames = [];\n\n    for (const animation of animations) {\n      animationsByName.set(animation.name, animation);\n      animationNames.push(animation.name);\n    }\n\n    this.animations = animations;\n    this.animationsByName = animationsByName;\n    this.animationNames = animationNames;\n\n    this.userData.url = url;\n\n    this.updateFraming();\n\n    this.dispatchEvent({type: 'model-load', url});\n  }\n\n  set animationTime(value: number) {\n    this.mixer.setTime(value);\n  }\n\n  get animationTime(): number {\n    if (this.currentAnimationAction != null) {\n      return this.currentAnimationAction.time;\n    }\n\n    return 0;\n  }\n\n  get hasActiveAnimation(): boolean {\n    return this.currentAnimationAction != null;\n  }\n\n  /**\n   * Plays an animation if there are any associated with the current model.\n   * Accepts an optional string name of an animation to play. If no name is\n   * provided, or if no animation is found by the given name, always falls back\n   * to playing the first animation.\n   */\n  playAnimation(name: string|null = null, crossfadeTime: number = 0) {\n    const {animations} = this;\n    if (animations == null || animations.length === 0) {\n      console.warn(\n          `Cannot play animation (model does not have any animations)`);\n      return;\n    }\n\n    let animationClip = null;\n\n    if (name != null) {\n      animationClip = this.animationsByName.get(name);\n    }\n\n    if (animationClip == null) {\n      animationClip = animations[0];\n    }\n\n    try {\n      const {currentAnimationAction: lastAnimationAction} = this;\n\n      this.currentAnimationAction =\n          this.mixer.clipAction(animationClip, this).play();\n      this.currentAnimationAction.enabled = true;\n\n      if (lastAnimationAction != null &&\n          this.currentAnimationAction !== lastAnimationAction) {\n        this.currentAnimationAction.crossFadeFrom(\n            lastAnimationAction, crossfadeTime, false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  stopAnimation() {\n    if (this.currentAnimationAction != null) {\n      this.currentAnimationAction.stop();\n      this.currentAnimationAction.reset();\n      this.currentAnimationAction = null;\n    }\n\n    this.mixer.stopAllAction();\n  }\n\n  updateAnimation(step: number) {\n    this.mixer.update(step);\n  }\n\n  clear() {\n    this.url = null;\n    this.userData = {url: null};\n    const gltf = this[$currentGLTF];\n    // Remove all current children\n    if (gltf != null) {\n      for (const child of this.modelContainer.children) {\n        this.modelContainer.remove(child);\n      }\n      gltf.dispose();\n      this[$currentGLTF] = null;\n    }\n\n    if (this.currentAnimationAction != null) {\n      this.currentAnimationAction.stop();\n      this.currentAnimationAction = null;\n    }\n\n    this.mixer.stopAllAction();\n    this.mixer.uncacheRoot(this);\n  }\n\n  /**\n   * Calculates the idealCameraDistance and fieldOfViewAspect that allows the 3D\n   * object to be framed tightly in a 2D window of any aspect ratio without\n   * clipping at any camera orbit. The camera's center target point can be\n   * optionally specified. If no center is specified, it defaults to the center\n   * of the bounding box, which means asymmetric models will tend to be tight on\n   * one side instead of both. Proper choice of center can correct this.\n   */\n  updateFraming(center: Vector3|null = null) {\n    this.remove(this.modelContainer);\n\n    if (center == null) {\n      this.boundingBox.setFromObject(this.modelContainer);\n      this.boundingBox.getSize(this.size);\n      center = this.boundingBox.getCenter(new Vector3);\n    }\n\n    const radiusSquared = (value: number, vertex: Vector3): number => {\n      return Math.max(value, center!.distanceToSquared(vertex));\n    };\n    const framedRadius =\n        Math.sqrt(reduceVertices(this.modelContainer, radiusSquared));\n\n    this.idealCameraDistance = framedRadius / SAFE_RADIUS_RATIO;\n\n    const horizontalFov = (value: number, vertex: Vector3): number => {\n      vertex.sub(center!);\n      const radiusXZ = Math.sqrt(vertex.x * vertex.x + vertex.z * vertex.z);\n      return Math.max(\n          value, radiusXZ / (this.idealCameraDistance - Math.abs(vertex.y)));\n    };\n    this.fieldOfViewAspect =\n        reduceVertices(this.modelContainer, horizontalFov) / DEFAULT_TAN_FOV;\n\n    this.add(this.modelContainer);\n  }\n\n  /**\n   * Sets the shadow's intensity, lazily creating the shadow as necessary.\n   */\n  setShadowIntensity(shadowIntensity: number, shadowSoftness: number) {\n    let shadow = this[$shadow];\n    if (shadow != null) {\n      shadow.setIntensity(shadowIntensity);\n      shadow.setModel(this, shadowSoftness);\n    } else if (shadowIntensity > 0) {\n      shadow = new Shadow(this, shadowSoftness);\n      shadow.setIntensity(shadowIntensity);\n      this[$shadow] = shadow;\n    }\n  }\n\n  /**\n   * Sets the shadow's softness by mapping a [0, 1] softness parameter to the\n   * shadow's resolution. This involves reallocation, so it should not be\n   * changed frequently. Softer shadows are cheaper to render.\n   */\n  setShadowSoftness(softness: number) {\n    const shadow = this[$shadow];\n    if (shadow != null) {\n      shadow.setSoftness(softness);\n    }\n  }\n\n  /**\n   * The shadow must be rotated manually to match any global rotation applied to\n   * this model. The input is the global orientation about the Y axis.\n   */\n  setShadowRotation(radiansY: number) {\n    const shadow = this[$shadow];\n    if (shadow != null) {\n      shadow.setRotation(radiansY);\n    }\n  }\n\n  /**\n   * Call when updating the shadow; returns true if an update is needed and\n   * resets the state.\n   */\n  updateShadow(): boolean {\n    const shadow = this[$shadow];\n    if (shadow == null) {\n      return false;\n    } else {\n      const {needsUpdate} = shadow;\n      shadow.needsUpdate = false;\n      return needsUpdate;\n    }\n  }\n\n  /**\n   * Shift the floor vertically from the bottom of the model's bounding box by\n   * offset (should generally be negative).\n   */\n  setShadowScaleAndOffset(scale: number, offset: number) {\n    const shadow = this[$shadow];\n    if (shadow != null) {\n      shadow.setScaleAndOffset(scale, offset);\n    }\n  }\n\n  /**\n   * The following methods are for operating on the set of Hotspot objects\n   * attached to the scene. These come from DOM elements, provided to slots by\n   * the Annotation Mixin.\n   */\n  addHotspot(hotspot: Hotspot) {\n    this.add(hotspot);\n  }\n\n  removeHotspot(hotspot: Hotspot) {\n    this.remove(hotspot);\n  }\n\n  /**\n   * Helper method to apply a function to all hotspots.\n   */\n  forHotspots(func: (hotspot: Hotspot) => void) {\n    const {children} = this;\n    for (let i = 0, l = children.length; i < l; i++) {\n      const hotspot = children[i];\n      if (hotspot instanceof Hotspot) {\n        func(hotspot);\n      }\n    }\n  }\n\n  /**\n   * Update the CSS visibility of the hotspots based on whether their normals\n   * point toward the camera.\n   */\n  updateHotspots(viewerPosition: Vector3) {\n    this.forHotspots((hotspot) => {\n      view.copy(viewerPosition);\n      target.setFromMatrixPosition(hotspot.matrixWorld);\n      view.sub(target);\n      normalWorld.copy(hotspot.normal).transformDirection(this.matrixWorld);\n      if (view.dot(normalWorld) < 0) {\n        hotspot.hide();\n      } else {\n        hotspot.show();\n      }\n    });\n  }\n\n  /**\n   * Rotate all hotspots to an absolute orientation given by the input number of\n   * radians. Zero returns them to upright.\n   */\n  orientHotspots(radians: number) {\n    this.forHotspots((hotspot) => {\n      hotspot.orient(radians);\n    });\n  }\n\n  /**\n   * Set the rendering visibility of all hotspots. This is used to hide them\n   * during transitions and such.\n   */\n  setHotspotsVisibility(visible: boolean) {\n    this.forHotspots((hotspot) => {\n      hotspot.visible = visible;\n    });\n  }\n}\n"]}