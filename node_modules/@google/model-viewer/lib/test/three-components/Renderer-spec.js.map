{"version":3,"file":"Renderer-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/Renderer-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {USE_OFFSCREEN_CANVAS} from '../../constants.js';\nimport ModelViewerElementBase, {$canvas, $loaded, $onResize, $scene, $userInputElement} from '../../model-viewer-base.js';\nimport {ModelScene} from '../../three-components/ModelScene.js';\nimport {Renderer} from '../../three-components/Renderer.js';\nimport {waitForEvent} from '../../utilities.js';\nimport {assetPath} from '../helpers.js';\n\nconst expect = chai.expect;\n\nconst ModelViewerElement = class extends ModelViewerElementBase {\n  static get is() {\n    return 'model-viewer-renderer';\n  }\n};\n\n// Ensure tests are not rescaling\nModelViewerElement.minimumRenderScale = 1;\n\ninterface TestScene {\n  renderCount?: number;\n}\n\ncustomElements.define('model-viewer-renderer', ModelViewerElement);\n\nasync function createScene(): Promise<ModelScene&TestScene> {\n  const element = new ModelViewerElement();\n  document.body.insertBefore(element, document.body.firstChild);\n  const sourceLoads = waitForEvent(element, 'load');\n  element.src = assetPath('models/Astronaut.glb');\n  await sourceLoads;\n\n  const scene = element[$scene] as ModelScene & TestScene;\n  scene.renderCount = 0;\n\n  scene.createContext();\n  const {context} = scene;\n  if (context instanceof CanvasRenderingContext2D) {\n    const drawImage = context.drawImage;\n    context.drawImage = (...args: any[]) => {\n      scene.renderCount!++;\n      (drawImage as any).call(context, ...args);\n    };\n  } else if (context instanceof ImageBitmapRenderingContext) {\n    const transferFromImageBitmap = context.transferFromImageBitmap;\n    context.transferFromImageBitmap = (...args: any[]) => {\n      scene.renderCount!++;\n      (transferFromImageBitmap as any).call(context, ...args);\n    }\n  } else {\n    throw new Error(\n        'context is neither a CanvasRenderingContext2D nor an ImageBitmapRenderingContext.');\n  }\n\n  return scene;\n}\n\nsuite('Renderer', () => {\n  let scene: ModelScene&TestScene;\n  let renderer: Renderer;\n\n  setup(async () => {\n    renderer = Renderer.singleton;\n    scene = await createScene();\n  });\n\n  teardown(() => {\n    renderer.unregisterScene(scene);\n    renderer.render(performance.now());\n  });\n\n  suite('render', () => {\n    let otherScene: ModelScene&TestScene;\n\n    setup(async () => {\n      otherScene = await createScene();\n    });\n\n    teardown(() => {\n      renderer.unregisterScene(otherScene);\n      renderer.render(performance.now());\n    });\n\n    test('renders only dirty scenes', () => {\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1, 'scene first render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene first render');\n\n      scene.isDirty = true;\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(2, 'scene second render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene second render');\n    });\n\n    test('does not render scenes that have not been loaded', () => {\n      scene.element[$loaded] = false;\n      scene.isDirty = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(0);\n      expect(scene.isDirty).to.be.ok;\n\n      scene.element[$loaded] = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1);\n      expect(!scene.isDirty).to.be.ok;\n    });\n\n    test('uses the proper canvas when unregsitering scenes', () => {\n      renderer.render(performance.now());\n\n      expect(renderer.canvasElement.classList.contains('show')).to.be.eq(false);\n      expect(scene.element[$canvas].classList.contains('show')).to.be.eq(true);\n      expect(otherScene.element[$canvas].classList.contains('show'))\n          .to.be.eq(true);\n\n      renderer.unregisterScene(scene);\n      renderer.render(performance.now());\n\n      if (USE_OFFSCREEN_CANVAS) {\n        expect(renderer.canvasElement.classList.contains('show'))\n            .to.be.eq(false);\n        expect(otherScene.element[$canvas].classList.contains('show'))\n            .to.be.eq(true);\n      } else {\n        expect(renderer.canvasElement.parentElement)\n            .to.be.eq(otherScene.element[$userInputElement]);\n        expect(renderer.canvasElement.classList.contains('show'))\n            .to.be.eq(true);\n        expect(otherScene.element[$canvas].classList.contains('show'))\n            .to.be.eq(false);\n      }\n    });\n\n    suite('when resizing', () => {\n      let originalDpr: number;\n\n      setup(() => {\n        originalDpr = self.devicePixelRatio;\n      });\n\n      teardown(() => {\n        Object.defineProperty(self, 'devicePixelRatio', {value: originalDpr});\n      });\n\n      test('updates effective DPR', async () => {\n        const {element} = scene;\n        const initialDpr = renderer.dpr;\n        const {width, height} = scene.getSize();\n\n        element[$onResize]({width, height});\n\n        Object.defineProperty(\n            self, 'devicePixelRatio', {value: initialDpr + 1});\n\n        await new Promise(resolve => requestAnimationFrame(resolve));\n\n        const newDpr = renderer.dpr;\n\n        expect(newDpr).to.be.equal(initialDpr + 1);\n      });\n    });\n  });\n});\n"]}