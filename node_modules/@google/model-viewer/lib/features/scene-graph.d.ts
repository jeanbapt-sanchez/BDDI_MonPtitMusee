import { Model } from '@google/3dom/lib/api.js';
import ModelViewerElementBase from '../model-viewer-base.js';
import { Constructor } from '../utilities.js';
interface SceneExportOptions {
    binary?: boolean;
    trs?: boolean;
    onlyVisible?: boolean;
    embedImages?: boolean;
    maxTextureSize?: number;
    forcePowerOfTwoTextures?: boolean;
    includeCustomExtensions?: boolean;
}
export interface SceneGraphInterface {
    readonly model?: Model;
    exportScene(options?: SceneExportOptions): Promise<Blob>;
}
/**
 * SceneGraphMixin manages a `<model-viewer>` integration with the 3DOM library
 * in order to support operations on the <model-viewer> scene graph.
 */
export declare const SceneGraphMixin: <T extends Constructor<ModelViewerElementBase, object>>(ModelViewerElement: T) => {
    new (...args: any[]): SceneGraphInterface;
    prototype: SceneGraphInterface;
} & object & T;
export {};
