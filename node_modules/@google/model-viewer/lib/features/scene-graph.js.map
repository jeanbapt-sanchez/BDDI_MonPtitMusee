{"version":3,"file":"scene-graph.js","sourceRoot":"","sources":["../../src/features/scene-graph.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Image, Material, Model, PBRMetallicRoughness, Sampler, Texture, TextureInfo, ThreeDOM} from '@google/3dom/lib/api.js';\nimport {ModelKernel} from '@google/3dom/lib/api/model-kernel.js';\nimport {ModelGraftManipulator} from '@google/3dom/lib/facade/model-graft-manipulator.js';\nimport {ModelGraft} from '@google/3dom/lib/facade/three-js/model-graft.js';\nimport {SerializedModel, ThreeDOMMessageType} from '@google/3dom/lib/protocol';\nimport {property} from 'lit-element';\nimport {GLTFExporter, GLTFExporterOptions} from 'three/examples/jsm/exporters/GLTFExporter';\n\nimport ModelViewerElementBase, {$needsRender, $onModelLoad, $scene} from '../model-viewer-base.js';\nimport {ModelViewerGLTFInstance} from '../three-components/gltf-instance/ModelViewerGLTFInstance.js';\nimport {$shadow} from '../three-components/Model.js';\nimport {Constructor} from '../utilities.js';\n\nconst $updateThreeSide = Symbol('updateThreeSide');\nconst $currentGLTF = Symbol('currentGLTF');\nconst $modelGraft = Symbol('modelGraft');\nconst $mainPort = Symbol('mainPort');\nconst $threePort = Symbol('threePort');\nconst $manipulator = Symbol('manipulator');\nconst $modelKernel = Symbol('modelKernel');\nconst $onModelChange = Symbol('onModelChange');\nconst $onModelGraftMutation = Symbol('onModelGraftMutation');\n\ninterface SceneExportOptions {\n  binary?: boolean, trs?: boolean, onlyVisible?: boolean, embedImages?: boolean,\n      maxTextureSize?: number, forcePowerOfTwoTextures?: boolean,\n      includeCustomExtensions?: boolean,\n}\n\nexport interface SceneGraphInterface {\n  readonly model?: Model;\n  exportScene(options?: SceneExportOptions): Promise<Blob>;\n}\n\n/**\n * SceneGraphMixin manages a `<model-viewer>` integration with the 3DOM library\n * in order to support operations on the <model-viewer> scene graph.\n */\nexport const SceneGraphMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<SceneGraphInterface>&T => {\n  class SceneGraphModelViewerElement extends ModelViewerElement implements\n      ThreeDOM {\n    @property({type: Object}) protected[$modelGraft]: ModelGraft|null = null;\n\n    protected[$currentGLTF]: ModelViewerGLTFInstance|null = null;\n    protected[$mainPort]: MessagePort|null = null;\n    protected[$threePort]: MessagePort|null = null;\n    protected[$manipulator]: ModelGraftManipulator|null = null;\n    protected[$modelKernel]: ModelKernel|null = null;\n\n    // ThreeDOM implementation:\n    /** @export */\n    get model() {\n      const kernel = this[$modelKernel];\n      return kernel ? kernel.model : undefined;\n    }\n\n    /**\n     * References to each 3DOM constructor. Supports instanceof checks; these\n     * classes are not directly constructable.\n     */\n    static Model: Constructor<Model>;\n    static Material: Constructor<Material>;\n    static PBRMetallicRoughness: Constructor<PBRMetallicRoughness>;\n    static Sampler: Constructor<Sampler>;\n    static TextureInfo: Constructor<TextureInfo>;\n    static Texture: Constructor<Texture>;\n    static Image: Constructor<Image>;\n\n    connectedCallback() {\n      super.connectedCallback();\n\n      const {port1, port2} = new MessageChannel();\n      port1.start();\n      port2.start();\n      this[$mainPort] = port1;\n      this[$threePort] = port2;\n      this[$mainPort]!.onmessage = this[$onModelChange];\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this[$mainPort]!.close();\n      this[$threePort]!.close();\n      this[$mainPort] = null;\n      this[$threePort] = null;\n      if (this[$manipulator] != null) {\n        this[$manipulator]!.dispose();\n      }\n      if (this[$modelKernel] != null) {\n        this[$modelKernel]!.deactivate();\n      }\n    }\n\n    updated(changedProperties: Map<string|symbol, unknown>): void {\n      super.updated(changedProperties);\n      if (changedProperties.has($modelGraft)) {\n        const oldModelGraft =\n            changedProperties.get($modelGraft) as ModelGraft | null;\n        if (oldModelGraft != null) {\n          oldModelGraft.removeEventListener(\n              'mutation', this[$onModelGraftMutation]);\n        }\n\n        const modelGraft = this[$modelGraft];\n\n        if (modelGraft != null) {\n          modelGraft.addEventListener('mutation', this[$onModelGraftMutation]);\n        }\n      }\n    }\n\n    [$onModelLoad]() {\n      super[$onModelLoad]();\n\n      this[$updateThreeSide]();\n    }\n\n    [$updateThreeSide]() {\n      // Three.js side (will eventually move to worker)\n      const scene = this[$scene];\n      const {model} = scene;\n      const {currentGLTF} = model;\n      let modelGraft: ModelGraft|null = null;\n      let manipulator: ModelGraftManipulator|null = null;\n\n      if (currentGLTF != null) {\n        const {correlatedSceneGraph} = currentGLTF;\n        const currentModelGraft = this[$modelGraft];\n        const currentManipulator = this[$manipulator];\n\n        if (correlatedSceneGraph != null) {\n          if (currentManipulator != null) {\n            currentManipulator.dispose();\n          }\n\n          if (currentModelGraft != null && currentGLTF === this[$currentGLTF]) {\n            return;\n          }\n\n          modelGraft = new ModelGraft(model.url || '', correlatedSceneGraph);\n\n          let channel = null;\n          if (modelGraft != null && modelGraft.model != null) {\n            channel = new MessageChannel();\n            manipulator = new ModelGraftManipulator(modelGraft, channel.port1);\n\n            this[$threePort]!.postMessage(\n                {\n                  type: ThreeDOMMessageType.MODEL_CHANGE,\n                  model: modelGraft.model.toJSON(),\n                  port: channel.port2\n                },\n                [channel.port2]);\n          } else {\n            this[$threePort]!.postMessage({\n              type: ThreeDOMMessageType.MODEL_CHANGE,\n              model: null,\n              port: null\n            });\n          }\n        }\n      }\n\n      this[$modelGraft] = modelGraft;\n      this[$manipulator] = manipulator;\n      this[$currentGLTF] = currentGLTF;\n    }\n\n    [$onModelChange] = (event: MessageEvent) => {\n      const {data} = event;\n      if (data && data.type === ThreeDOMMessageType.MODEL_CHANGE) {\n        const serialized: SerializedModel|null = data.model;\n        const currentKernel = this[$modelKernel];\n\n        if (currentKernel != null) {\n          currentKernel.deactivate();\n        } else if (serialized == null) {\n          // Do not proceed if transitioning from null to null\n          return;\n        }\n\n        if (serialized != null) {\n          this[$modelKernel] = new ModelKernel(data.port, serialized);\n        } else {\n          this[$modelKernel] = null;\n        }\n\n        this.dispatchEvent(new CustomEvent(\n            'scene-graph-ready',\n            {detail: {url: serialized ? serialized.modelUri : null}}));\n      }\n    };\n\n    [$onModelGraftMutation] = (_event: Event) => {\n      this[$needsRender]();\n    }\n\n    /** @export */\n    async exportScene(options?: SceneExportOptions): Promise<Blob> {\n      const {model} = this[$scene];\n      return new Promise<Blob>(async (resolve, reject) => {\n        if (model == null) {\n          return reject('Model missing or not yet loaded');\n        }\n\n        // Defaults\n        const opts = {\n          binary: true,\n          onlyVisible: true,\n          maxTextureSize: Infinity,\n          forcePowerOfTwoTextures: false,\n          includeCustomExtensions: false,\n          embedImages: true\n        } as GLTFExporterOptions;\n\n        Object.assign(opts, options);\n        // Not configurable\n        opts.animations = model.animations;\n        opts.truncateDrawRange = true;\n\n        const shadow = model[$shadow];\n        let visible = false;\n        // Remove shadow from export\n        if (shadow != null) {\n          visible = shadow.visible;\n          shadow.visible = false;\n        }\n\n        const exporter = new GLTFExporter();\n        exporter.parse(model.modelContainer, (gltf) => {\n          return resolve(\n              new Blob([opts.binary ? gltf as Blob : JSON.stringify(gltf)], {\n                type: opts.binary ? 'application/octet-stream' :\n                                    'application/json'\n              }));\n        }, opts);\n\n        if (shadow != null) {\n          shadow.visible = visible;\n        }\n      });\n    }\n  }\n\n  return SceneGraphModelViewerElement;\n};\n"]}